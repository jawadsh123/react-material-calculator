{"version":3,"sources":["Calculator.js","containers/calculatorContainer.js","actions/index.js","reducers/history.js","reducers/currentOperation.js","reducers/theme.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["Calculator","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","evt","newOperation","target","closest","value","updateCurrent","handleLongButtonPress","console","log","buttonPressTimer","setTimeout","handleLongButtonRelease","clearTimeout","_this2","buttons","document","querySelectorAll","toConsumableArray","map","val","addEventListener","react_default","a","createElement","Paper_default","className","elevation","Grid_default","item","xs","concat","currentOperation","computed","expression","result","container","Button_default","onMouseDown","onMouseUp","Icon_default","PureComponent","connect","state","dispatch","addHistory","operation","type","history","arguments","length","undefined","action","mexp","require","evaluateExpression","eval","_unused","newState","objectSpread","newExpression","slice","theme","calcReducers","combineReducers","store","createStore","calcReducer","App","justify","alignItems","es","calculatorContainer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70c75fb0.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Calculator.css';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Icon from '@material-ui/core/Icon';\n\n\n\n\n\nclass Calculator extends PureComponent{\n    constructor(props) {\n        super(props);\n        console.log(this.props)\n    }\n\n    componentDidMount() {\n        const buttons = document.querySelectorAll('.calc-container .button:not(.backspace)');\n        [...buttons].map(val => val.addEventListener('click', this.handleClick))\n    }\n\n    handleClick = (evt) => {\n        const clickedOn = evt.target.closest('.button').value;\n        const newOperation = clickedOn;\n        this.props.updateCurrent(newOperation)\n    }\n\n    handleLongButtonPress = (evt) => {\n        console.log('HUEHUE')\n        this.buttonPressTimer = setTimeout(() => {\n            this.props.updateCurrent('clear');\n        }, 700);\n    }\n\n    handleLongButtonRelease = (evt) => {\n        clearTimeout(this.buttonPressTimer);\n        this.props.updateCurrent('back')\n    }\n\n    render() {\n        return (\n            <Paper className='calc-container' elevation={4}>\n                <Grid item xs={12} className={`current-operation ${this.props.currentOperation.computed?'computed':''}`}>\n                    <span className='expression'>{this.props.currentOperation.expression}</span>\n                    <div className='result hidden'>{this.props.currentOperation.result}</div>\n                </Grid>\n                <Grid item xs={12} className='buttons-container'>\n                    <Grid container>\n                        <Grid item xs={3}>\n                            <Button className='button' value='7'>7</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button className='button' value='8'>8</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button className='button' value='9'>9</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button className='button operation-button backspace' onMouseDown={this.handleLongButtonPress} \n                                onMouseUp={this.handleLongButtonRelease} value='clear'>\n                                <Icon>backspace</Icon>\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    <Grid container>\n                        <Grid item xs={3}>\n                            <Button className='button' value='4'>4</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button className='button' value='5'>5</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button className='button' value='6'>6</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button className='button operation-button' value='*'> x </Button>\n                        </Grid>\n                    </Grid>\n                    <Grid container>\n                        <Grid item xs={3}>\n                            <Button className='button' value='1'>1</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button className='button' value='2'>2</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button className='button' value='3'>3</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button className='button operation-button' value='-'> - </Button>\n                        </Grid>\n                    </Grid>\n                    <Grid container>\n                        <Grid item xs={3}>\n                            <Button className='button' value='0'>0</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button className='button' value='.'>.</Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button className='button' value='='> = </Button>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button className='button operation-button' value='+'> <Icon>add</Icon> </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Paper>\n        )\n    }\n}\n\nexport default Calculator;","import { connect } from 'react-redux';\nimport { updateCurrent, addHistory } from '../actions';\nimport Calculator from '../Calculator';\n\nconst mapStateToProps = state => ({\n    currentOperation: state.currentOperation\n})\n\nconst mapDispatchToProps = dispatch => ({\n    addHistory: operation => dispatch(addHistory(operation)),\n    updateCurrent: expression => dispatch(updateCurrent(expression))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Calculator);","\nexport const addHistory = operation => ({\n    type: 'ADD_HISTORY',\n    operation\n})\n\nexport const updateCurrent = expression => ({\n    type: 'UPDATE_CURRENT',\n    expression\n})\n\nexport const toggleTheme = () => ({\n    type: 'TOGGLE_THEME'\n})","const history = (state = [], action) => {\n    switch(action.type) {\n        case 'ADD_HISTORY':\n            return [\n                ...state,\n                action.operation\n            ]\n        default:\n            return state\n    }\n}\n\nexport default history;","const mexp = require('math-expression-evaluator');\n\nconst evaluateExpression = (expression) => {\n    try {\n        return mexp.eval(expression);\n    } catch {\n        return '';\n    }\n}\n\nconst currentOperation = (state = {expression:'',result:'', computed:false}, action) => {\n    switch(action.type) {\n        case 'UPDATE_CURRENT':\n            let result = '';\n            let newState = {};\n\n            switch(action.expression) {\n                case '=':\n                    result = evaluateExpression(state.expression);\n                    newState = {...state, result:result, computed:true};\n                    break;\n                case 'clear':\n                    newState = {expression:'', result:'', computed:false}\n                    break;\n                case 'back':\n                    console.log(state.expression)\n                    if (state.expression.length > 0){\n                        const newExpression = state.expression.slice(0,-1);\n                        result = evaluateExpression(newExpression);\n                        newState = {expression:newExpression, result:result, computed:false}\n                    } else {\n                        return state;\n                    }\n                    break;\n                default:\n                    let newExpression = '';\n                    if (state.computed) {\n                        newExpression = state.result + action.expression;\n                    } else {\n                        newExpression = state.expression + action.expression;\n                    }\n                    result = evaluateExpression(newExpression);\n                    newState = {expression: newExpression, result: result, computed:false};\n            }\n            return newState\n        default:\n            return state\n    }\n    return state;\n}\n\nexport default currentOperation;","\nconst theme = (state = 'light', action) => {\n    switch(action.type) {\n        case 'TOGGLE_THEME':\n            return (state === 'light' ? 'dark' : 'light');\n        default:\n            return state\n    }\n}\n\nexport default theme;","import { combineReducers } from 'redux';\nimport history from './history';\nimport currentOperation from './currentOperation';\nimport theme from './theme';\n\nconst calcReducers =  combineReducers({\n    history,\n    currentOperation,\n    theme\n})\n\nexport default calcReducers;","import React, { Component } from 'react';\nimport './App.css';\n// import Calculator from './containers/calculatorContainer';\nimport Grid from '@material-ui/core/Grid';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport Calculator from './containers/calculatorContainer';\nimport calcReducer from './reducers';\n\nconst store = createStore(calcReducer);\n\nclass App extends Component {\n    render() {\n        return (\n                <Grid container className=\"App\" justify='center' alignItems='center'>\n                    <Provider store={store}>\n                        <Calculator></Calculator>\n                    </Provider>\n                </Grid>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport calcReducer from './reducers';\nimport { createStore } from 'redux';\n\nconst store = createStore(calcReducer);\n\nReactDOM.render(\n    <App />, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}